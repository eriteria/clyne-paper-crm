name: Integration Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  integration-tests:
    name: Integration Tests with PostgreSQL
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: clyne_crm_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            backend/package-lock.json
      
      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
      
      - name: Generate Prisma Client
        run: cd backend && npx prisma generate
      
      - name: Run database migrations
        run: cd backend && npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/clyne_crm_test
      
      - name: Seed test database
        run: cd backend && npm run db:seed
        env:
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/clyne_crm_test
          NODE_ENV: test
      
      - name: Run integration tests
        run: cd backend && npm run test:integration
        env:
          TEST_DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/clyne_crm_test
          NODE_ENV: test
          JWT_SECRET: test-jwt-secret-key-for-ci-only
          JWT_REFRESH_SECRET: test-refresh-secret-key-for-ci-only
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            backend/coverage/
            backend/test-results.xml
          retention-days: 30
      
      - name: Generate test summary
        if: always()
        run: |
          echo "## Integration Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Integration tests completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Database: PostgreSQL 15" >> $GITHUB_STEP_SUMMARY
          echo "Test environment: CI" >> $GITHUB_STEP_SUMMARY
